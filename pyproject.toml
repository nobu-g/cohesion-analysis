[tool.poetry]
package-mode = false
name = "cohesion-analysis"
version = "2.0.0"
description = "Cohesion analyzer for Japanese text"
license = "MIT"
authors = ["Nobuhiro Ueda <ueda@nlp.ist.i.kyoto-u.ac.jp>"]
maintainers = ["Nobuhiro Ueda <ueda@nlp.ist.i.kyoto-u.ac.jp>"]
readme = "README.md"
repository = "https://github.com/nobu-g/cohesion"
keywords = [
    "NLP",
    "Japanese",
    "PAS analysis",
    "coreference resolution",
    "bridging anaphora resolution",
]

[tool.poetry.dependencies]
python = "^3.9"
torch = ">=2.1.1"
transformers = { version = "~4.43.4", extras = ["sentencepiece"] }
tokenizers = "^0.19.1"
lightning = "^2.2"
torchmetrics = "^1.1"
omegaconf = "^2.3"
hydra-core = "^1.3"
rhoknp = { version = "~1.7.0", extras = ["cli"] }
dataclasses-json = "^0.6.1"
pandas = "^2.0"
rich = "^13.3"
wandb = ">=0.17.0"
jaconv = "^0.4.0"
cohesion-tools = "^0.7.1"
typing-extensions = ">=4.4"

[tool.poetry.group.server.dependencies]
uvicorn = ">=0.22.0"
fastapi = ">=0.95.1"
pyhumps = "^3.8"

[tool.poetry.group.dev.dependencies]
ipdb = "^0.13.9"
pytest = "^8.2"

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py39"  # The minimum Python version to target
src = ["src"]

[tool.ruff.lint]
select = ["F", "E", "W", "I", "B", "PL", "PD", "NPY", "RUF", "UP", "TID", "COM", "PT", "ARG", "PYI"]
ignore = [
    "PLR0912",  # Too many branches
    "PLR0913",  # Too many arguments in function definition
    "PLR0915",  # Too many statements
    "PLR2004",  # Magic value used in comparison
    "E501",  # Line too long
    "RUF001",  # String contains ambiguous `ノ` (KATAKANA LETTER NO). Did you mean `/` (SOLIDUS)?
    "RUF002",  # Docstring contains ambiguous `，` (FULLWIDTH COMMA). Did you mean `,` (COMMA)?
    "RUF003",  # Comment contains ambiguous `，` (FULLWIDTH COMMA). Did you mean `,` (COMMA)?
    "COM812",  # Trailing comma missing
    "ANN002",  # Missing type annotation for `*args`
    "ANN003",  # Missing type annotation for `**kwargs`
    "ANN101",  # Missing type annotation for `self` in method
    "ANN102",  # Missing type annotation for `cls` in classmethod
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ANN"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.black]
line-length = 120
target-version = ["py39", "py310", "py311", "py312"]

[tool.mypy]
python_version = 3.9

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
